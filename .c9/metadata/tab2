{"changed":false,"filter":false,"title":"Immediate (Debugger)","tooltip":"Immediate (Debugger)","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Welcome to the debugger inspector. You can inspect any process that the debugger is attached to. Code ","will be executed in the global context unless on a breakpoint, then code is executed in the current frame.",""],"id":590}]]},"immediate":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":2,"column":0},"end":{"row":2,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0,"type":"jsbrowser","history":["new Arena()","need entityManager","entityManager","var k = new Grid();","var k = new Arena();","var k = new Grid();","k = new Grid()","new Grid()","switch('a') {case 'browser': console.log('!')}","switch('a') {case 'a': console.log('!')}","'string'.split('')","'abcd'.map(function() { return 'x'; })","'abcd'.map(function() { return 'x'; })","var k = {a: function() {return 3}, b: function() { this.a(); }}","k.b()","var k = {a: function() {return 3}, b: function() { console.log(this); }}","k.b()","var k = {a: function() {return 3}, b: function() { return a(); }}","new Arena()","need entityManager","entityManager","var k = new Grid();","var k = new Arena();","var k = new Grid();","k = new Grid()","new Grid()","switch('a') {case 'browser': console.log('!')}","switch('a') {case 'a': console.log('!')}","'string'.split('')","'abcd'.map(function() { return 'x'; })","'string'.split('')","'abcd'.map(function() { return 'x'; })","'abcd'.map(function() { return 'x'; })","'abcd'.map(function() { return 'x'; })","'abcd'.map(function() { return 'x'; })","'abcd'.map(function() { return 'x'; })","'abcd'.map(function() { return 'x'; })"],"pos":-1},"timestamp":1446143665440}